/////////////////////////////////////////////////////////
//
//   quest_buerger - OverrideFunction KI Hauptkram in main.inc
//                   Main_AI3
//
//
//     Author: Turley
//
//
//   Modifications:
//     06.05.08 Turley: Init
//
/////////////////////////////////////////////////////////

// Quest Bürger: Spezielle QuestKI, kann nicht wirklich viel
//  versteckt sich abhängig von ActiveTime

include ":main_ai3:include_common/main_ai";
CONST NATURE:=NATURE_QUEST_BUERGER;
include ":main_ai3:include_common/main";
include ":main_ai3:include_common/common";
include ":main_ai3:include_nature/quest";

include ":questsystem:questsystem";

Var questcfg:=ReadConfigFile(":questsystem:quests"); //Config für Quests
var questnpccfg:=ReadConfigFile(":questsystem:questnpc");//Config für den QuestNPC

CONST SPEECH_WAIT := 5;

var hilferuf:=1;

Function OnStart()
  OnStartQuesti();
EndFunction

Function InitNPC()
  If (me.name["<random>"])
    if (Me.getprop("questnpc"))
      var index:=Me.getprop("questnpc");
      var npceintrag:=questnpccfg[index];
      if (npceintrag.name)
        SetName(me, npceintrag.name + PreserveTitle(me));
      else
        SetName(me, RandomName(me));
      endif
    else
      SetName(me, RandomName(me));
    endif
  EndIf
  Habille(me, GetObjProperty(me, "Equipt")); //austatten nach "Equipt"
  EquipMe(); //ausstatten nach configeintraegen
EndFunction

Function InitParamsSpezial(byref mytemplate)
  //allgemeine Zeitangabe zum aktiv sein
  Var activetime:=lower(CStr(mytemplate.activetime));
  // Bestimmt zu welcher Tagestunde die Viecher in den
  // InactiveMode gehen (quasi pennen) wo sie sich ggf
  // verstecken und nur wach werden, wenn sie verletzt
  // werden oder jemand ganz nah an sie rankommt
  If (lower(activetime) == "day")
    params.insert(WAKEUPTIME,8);
    params.insert(SLEEPTIME,20);
  ElseIf (lower(activetime) == "daydawn")
    params.insert(WAKEUPTIME,6);
    params.insert(SLEEPTIME,22);
  ElseIf (lower(activetime) == "night")
    params.insert(WAKEUPTIME,22);
    params.insert(SLEEPTIME,6);
  ElseIf (lower(activetime) =="nightdawn")
    params.insert(WAKEUPTIME,20);
    params.insert(SLEEPTIME,8);
  Else
    //spezielle Zeitangabe zum aktiv sein
    Var sleeptime:=lower(CStr(mytemplate.sleeptime));
    Var wakeuptime:=lower(CStr(mytemplate.wakeuptime));
    if ((sleeptime) && (wakeuptime))
      params.insert(WAKEUPTIME,CInt(wakeuptime));
      params.insert(SLEEPTIME,CInt(sleeptime));
    else
      params.insert(WAKEUPTIME,0); //rund um die Uhr aktiv
      params.insert(SLEEPTIME,0);
    endif
  EndIf
  EnableEvents(SYSEVENT_SPEECH, params[RANGESENSE]);
EndFunction

Function Before_Events()
  Var aufgewacht;
  if (params[WAKEUPTIME]>0)
    aufgewacht:=0;
    while (!HourWithinRange(GetPergonHourOfDay(0),params[WAKEUPTIME],params[SLEEPTIME]))
      If (!me.hidden)
        me.hidden:=1;
        DisableEvents(SYSEVENT_ENGAGED);
        DisableEvents(SYSEVENT_DISENGAGED);
        DisableEvents(SYSEVENT_DAMAGED);
        DisableEvents(SYSEVENT_ENTEREDAREA);
        DisableEvents(SYSEVENT_SPEECH);
        aufgewacht:=1;
      EndIf
      Sleep(30);
      Clear_Event_Queue();
    endwhile
    If (aufgewacht)
      me.hidden:=0;
      EnableEvents(SYSEVENT_ENGAGED);
      EnableEvents(SYSEVENT_DISENGAGED);
      EnableEvents(SYSEVENT_DAMAGED);
      EnableEvents(SYSEVENT_ENTEREDAREA, params[RANGESENSE]);
      EnableEvents(SYSEVENT_SPEECH, params[RANGESENSE]); //fuer die zahmen tiere
    Endif
  endif
EndFunction

Function IdleTime()
  Return(IdleTime_Common());
EndFunction

Function Event_DoubleClicked(byref ev)
  Event_DoubleClicked_Common(ev);
EndFunction

Function Event_ItemGiven(byref ev)
  Event_ItemGiven_Common(ev);
EndFunction

Function Event_Speech(byref ev)
  if ((GetObjProperty(Me,"questnpc"))&&(lower(" "+ev.text+" ")[" auftrag "]))
    if (!GetObjProperty(Me,PROP_MASTER))
      var parms:={};
      parms[1]:=Me;
      parms[2]:=ev.source;
      Start_ScriptPergon(":questsystem:questsystem",parms);
      Return;
    endif
  else
    If (!RandomInt(3)) // nicht immer reden
      PrintTextAbovePergon(ev.source,me,
                Answering({"seid_gegruesst","hallo"}[RandomIntMinMax(1,3)],
                PlaceName(me), me
      ));
    EndIf
  endif
EndFunction

Function Can_Speech_Kill()
  Return(0);
EndFunction

Function Can_Speech_Guard()
  Return(0);
EndFunction

Function Event_Engaged(byref ev)
  If (Event_Engaged_Common(ev))
    UmHilfeRufen();
    if( !Me.warmode ) //nur wenn er nicht schon kaempft
      FightQuesti( ev.source, params[RANGESENSE]);
    endif
  EndIf
EndFunction

Function Event_Disengaged(byref ev)
  Event_Disengaged_Common(ev);
EndFunction

Function Event_Damaged(byref ev)
  If (Event_Damaged_Common(ev))
    if( !Me.warmode ) //nur wenn er nicht schon kaempft
      FightQuesti( ev.source, params[RANGEFOLLOW] );
    else
      if( !RandomInt(50) ) //2%chance vielleicht renn ich ja trotzdem hin?
        SetWarmode(0); //neuen gegner setzen ermoeglichen
        FightQuesti( ev.source, params[RANGEFOLLOW] );
      endif
    endif
  EndIf
EndFunction

Function Event_EnteredArea(byref ev)
  If (!ev.source.isa(POLCLASS_NPC))
    wandersteps:=params[IDLESTEPS];//wenn ein Player in Sicht kommt ein bissel rumlatschen
  EndIf
EndFunction

Function Event_LeftArea(byref ev)
  Event_LeftArea_Common(ev);
EndFunction

Function Event_StillRun(byref ev)
  Return;
  ev:=ev;
EndFunction

Function Event_LookAround(byref ev)
  Return;
  ev:=ev;
EndFunction

Function Event_Follow(byref ev)
  Event_Follow_Common(ev);
EndFunction

Function Event_AskJoin(byref ev)
  Return;
  ev:=ev;
  //Event_AskJoin_Common(ev);
EndFunction

Function Event_GrantJoin(byref ev)
  Return;
  ev:=ev;
  //Event_GrantJoin_Common(ev);
EndFunction

Function Event_RefuseJoin(byref ev)
  Return;
  ev:=ev;
  //Event_RefuseJoin_Common(ev);
EndFunction

Function Event_Walk(byref ev)
  Event_Walk_Common(ev);
EndFunction

Function Event_Peacemade(byref ev)
  Event_Peacemade_Common(ev);
  MakeMePeaceful(params[RANGESENSE]);
EndFunction

Function Event_Guards_Help(byref ev)
  Event_Guards_Help_Common(ev);
EndFunction

Function Event_Cast_Wait(byref ev)
  If (!Me.warmode)  // Kämpf ich noch?
    params[FIRSTCAST]:=1;
    Return;
  EndIf
  If (Me.getprop(PROP_OPPONENT))  // Hinkt wegen Lookaround immer hinterher
    ev.source:=SystemFindObjectBySerial(Me.getprop(PROP_OPPONENT));
    If (!ev.source)                     // deswegen opp aus cprop holen
      params[FIRSTCAST]:=1;
      Return;
    EndIf
    If (!Event_Cast_Wait_Common(ev))
      MakeMePeaceful(params[RANGESENSE]);
    EndIf
  Else
    params[FIRSTCAST]:=1;
  EndIf
EndFunction

Function Event_Quest_Waypoint(byref ev)
  Return;
  ev:=ev;
  //WayPointReached(ev.pos, ev.endspot);
EndFunction

Function Event_Quest_Speech(byref ev)
  hilferuf:=1;
  Return;
  ev:=ev;
EndFunction

Function Event_Self_Kill(byref ev)
  Return;
  ev:=ev;
  //killmobilesilent(me,"EscortQuest beendet");
EndFunction

Function Event_Quest_Nemesis(byref ev)
  Return;
  ev:=ev;
EndFunction

Function Event_Reflection(byref ev)
	Event_Reflection_Common(ev);
EndFunction

Function OnIdle()
  OnIdleQuesti();
EndFunction


Function ValidEnemy_Override(byref mob,byref hostile)
  Return(ValidEnemy_Override_Common(mob));
  hostile:=hostile;
EndFunction
