//**************************************************************************************************
// Script file immune.src
//
//    implements spell 229 <Immune> - "Immunitaet"
//
//	renders spelltarget virtually immune by boosting all elemental resistances (including poison)
//		[ Resisted (Magic) ]
//
//	Vers. 0.9	- 19.11.2001 Sebastian 'Bihinos' Giese
//	Vers. 1.1	- 03.10.2003 Sebastian 'Bihinos' Giese - ueberarbeitet
//
//**************************************************************************************************


Include "include/spellcheck";
Include "../magicpergon";

program cast_immune (params)

   Var caster;
   Var caston;
   Var oldres:= {};

   Var spells:= ReadConfigFile("::spells"); 									// load spelldata
   Var spell:=  FindConfigElem(spells, SPELLID_CLERIC_IMMUNE);
   Var difficulty:= spell.skill;
   Var resist:=  spell.resist;
   Var rese:=    spell.primary;
   Var minrese:= spell.primarymin;
   Var maxrese:= spell.primarymax;
   Var resp:=    spell.secondary;
   Var minresp:= spell.secondarymin;
   Var maxresp:= spell.secondarymax;
   Var dur:=     spell.duration;
   Var mindur:=  spell.durationmin;
   Var maxdur:=  spell.durationmax;
   Var power;

   if (params[1] == "#MOB")
      caster:= params[2];
      power:=  params[3];
      caston:= params[4];
   elseif (params[1] == "#SCROLL")
      caster:= params[2];
      power:=  params[3];
      caston:= TargetSpell(caster, TGTOPT_HELPFUL + TGTOPT_CHECK_LOS);
      if (!caston)
         SendSysMessagePergon(caster, "Kein Ziel", "No target");
         return;
      endif
   else
      caster:= params[1];

      power:= GetCastPowerPergon(caster, SPELLID_CLERIC_IMMUNE);
      caston:= TargetSpell(caster, TGTOPT_HELPFUL + TGTOPT_CHECK_LOS);
      if (!caston)
         SendSysMessagePergon(caster, "Kein Ziel", "No target");
         return;
      endif
   endif

   TurnCharTo(caster, caston);
   PerformAction(caster, ANIM_CAST_AREA);

   PlaySoundEffect(caston, SFX_215);
   PlayObjectCenteredEffect(caston, FX_SPARK_EFFECT, 15, 20);

   if (GetObjProperty(caston, "spell_resist"))		// check if spelltarget already has elemental resistance
      Var restypeger;										// (only one enchantment at a time)
      Var restypeeng;
      case (GetObjProperty(caston, "spell_resist")[2])
         "elements":	restypeger:= "Elementare Angriffe";
         				restypeeng:= "Elemental Attacs";
         default:		restypeger:= "magische Angriffe";
         				restypeeng:= "Magical Attacs";
      endcase

      SendSysMessagePergon(caster, "Euer Ziel ist bereits gegen " + restypeger + " geschützt",
                                   "Your target is already protected against " + restypeeng);
      return;
   endif
								// calc spelleffects according to spelltargets magic resistance
   if (resist)				// and casting power
      rese:= CInt(Magicresistance(caston, difficulty, resist, power*rese/100.0, 1));
      resp:= CInt(Magicresistance(caston, difficulty, resist, power*resp/100.0, 0));
      dur:=  CInt(Magicresistance(caston, difficulty, resist, power*dur/100.0, 0));
   else
      rese:= CInt(power*rese/100.0);
      resp:= CInt(power*resp/100.0);
      dur:=  CInt(power*dur/100.0);
   endif

   if (minrese and minrese > rese)
      rese:= minrese;
   elseif (maxrese and maxrese < rese)
      rese:= maxrese;
   endif
   if (minresp and minresp > resp)
      resp:= minresp;
   elseif (maxresp and maxresp < resp)
      resp:= maxresp;
   endif
   if (mindur and mindur > dur)
      dur:= mindur;
   elseif (maxdur and maxdur < dur)
     dur:= maxdur;
   endif

   Set_Critical(1);
   oldres[1]:= CInt(GetObjProperty(caston, "resist_fire"));		// get elemental resistances of spelltarget
   oldres[2]:= CInt(GetObjProperty(caston, "resist_water"));
   oldres[3]:= CInt(GetObjProperty(caston, "resist_air"));
   oldres[4]:= CInt(GetObjProperty(caston, "resist_earth"));
   oldres[5]:= CInt(GetObjProperty(caston, "resist_poison"));

   SetObjProperty(caston, "resist_fire", oldres[1] + rese);		// set new elemental resistances
   SetObjProperty(caston, "resist_water", oldres[2] + rese);
   SetObjProperty(caston, "resist_air", oldres[3] + rese);
   SetObjProperty(caston, "resist_earth", oldres[4] + rese);
   SetObjProperty(caston, "resist_poison", oldres[5] + rese);
   Set_Critical(0);
   
   SetCastPowerProperty(caston,"Magie",CInt(rese/3),"","Fire",0);
   SetCastPowerProperty(caston,"Magie",CInt(rese/3),"","Water",0);
   SetCastPowerProperty(caston,"Magie",CInt(rese/3),"","Air",0);
   SetCastPowerProperty(caston,"Magie",CInt(rese/3),"","Earth",0);
   SetCastPowerProperty(caston,"Magie",CInt(rese/3),"","Poison",0);
   RefreshSpellPowerGump(caston);

   var tag:= array;

   tag[1]:= ReadGameClock() + dur;
   tag[2]:= "elements";
   tag[3]:= rese;
   tag[4]:= "immune";
   tag[5]:= resp;
   tag[6]:= ReadMilliSecondClock();

   SetObjProperty(caston, "spell_resist", tag);			// tag spelltarget for spellchecker
   SendSpellWaiter(caston, "spell_resist", dur, tag[6], caston);

   if (!caston.isa(POLCLASS_NPC))								// spell has been casted on Player
      PrintTextAbovePrivatePergon(caston, "Ihr spürt, wie Ihr nahezu unempfindlich gegen alle Elemente werdet",
                                          "You feel yourself becoming almost invulnerable to all elements", caston);
      SendStatus(caston);	 															//Update Statuswindow
   endif   

endprogram
