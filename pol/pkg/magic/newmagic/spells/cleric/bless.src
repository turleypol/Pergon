//**************************************************************************************************
// Script file bless.src
//
//    implements spell 210 <Bless> - "Segen"
//
//	raises all attributes (INT, DEX, STR) of spelltarget
//		[ Resisted (Magic) ]
//
//	Vers. 0.9	- 19.11.2001 Sebastian 'Bihinos' Giese
//	Vers. 1.1	- 01.10.2003 Sebastian 'Bihinos' Giese - ueberarbeitet
//
//**************************************************************************************************

Include "include/spellcheck";
Include "../magicpergon";

program cast_bless (params)

   Var caster;
   Var caston;

   Var spells:= ReadConfigFile("::spells"); 									// load spelldata
   Var spell:=  FindConfigElem(spells, SPELLID_CLERIC_BLESS);
   Var difficulty:= spell.skill;
   Var resist:=  spell.resist;
   Var amnt:=    spell.primary;
   Var minamnt:= spell.primarymin;
   Var maxamnt:= spell.primarymax;
   Var dur:=     spell.duration;
   Var mindur:=  spell.durationmin;
   Var maxdur:=  spell.durationmax;
   Var power;

   if (params[1] == "#MOB")
      caster:= params[2];
      power:=  params[3];
      caston:= params[4];
   elseif (params[1] == "#SCROLL")
      caster:= params[2];
      power:=  params[3];
      caston:= TargetSpell(caster, TGTOPT_HELPFUL + TGTOPT_CHECK_LOS);
      if (!caston)
         SendSysMessagePergon(caster, "Kein Ziel", "No target");
         return;
      endif
   else
      caster:= params[1];

      power:= GetCastPowerPergon(caster, SPELLID_CLERIC_BLESS);
      caston:= TargetSpell(caster, TGTOPT_HELPFUL + TGTOPT_CHECK_LOS);
      if (!caston)
         SendSysMessagePergon(caster, "Kein Ziel", "No target");
         return;
      endif
   endif

   TurnCharTo(caster, caston);
   PerformAction(caster, ANIM_CAST_DIR);

   PlaySoundEffect(caston, SFX_1F8);
   PlayObjectCenteredEffect(caston, FX_BLESS_EFFECT, 10, 10);

   if (GetObjProperty(caston, "spell_bless"))						// check if spelltarget is already blessed
      SendSysMessagePergon(caster, "Euer Ziel ist bereits gesegnet", "Your target already has been blessed");
      return;
   endif
								// calc spelleffects according to spelltargets magic resistance
   if (resist)				// and casting power
      amnt:= CInt(MagicResistance(caston, difficulty, resist, power*amnt/100.0, 1));
      dur:=  CInt(MagicResistance(caston, difficulty, resist, power*dur/100.0, 0));
   else
      amnt:= CInt(power*amnt/100.0);
      dur:=  CInt(power*dur/100.0);
   endif

   if (minamnt and minamnt > amnt)
      amnt:= minamnt;
   elseif (maxamnt and maxamnt < amnt)
      amnt:= maxamnt;
   endif
   if (mindur and mindur > dur)
      dur:= mindur;
   elseif (maxdur and maxdur < dur)
      dur:= maxdur;
   endif
								// get average amount of attribute change
   amnt:= CInt((GetIntPergon(caston) + GetDexPergon(caston) + GetStrPergon(caston)) * amnt / 300);

   var modifystruct:=struct{spelltarget:=0,
                            int:=0,
                            dex:=0,
                            str:=0,
                            cprop:=struct{name:="",value:={}},
                            CastPower:={}};
   modifystruct.spelltarget:=caston;
   modifystruct.int:=amnt;
   modifystruct.dex:=amnt;
   modifystruct.str:=amnt;
   modifystruct.cprop.value:={};
   modifystruct.cprop.value[1]:= ReadGameClock() + dur;
   modifystruct.cprop.value[2]:= amnt;
   modifystruct.cprop.value[3]:= "bless";
   modifystruct.cprop.value[5]:= ReadMilliSecondClock();
   modifystruct.cprop.name:="spell_bless";
   modifystruct.CastPower:={{caston,"Magie",amnt,"Cleric","",0},
                            {caston,"Magie",amnt,"",spell.SubClass,0},
                            {caston,"Magie",CInt(amnt/5),"","Common",0}}; //20% auf alles
   SendSpellWaiter(caston, "spell_bless", dur, modifystruct.cprop.value[5], caston,modifystruct);

EndProgram
